% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mnl_model_functions.R
\name{mnl_mixture_coord_exch}
\alias{mnl_mixture_coord_exch}
\title{Coordinate exchange algorithm for a Multinomial Logit Scheffé model.}
\usage{
mnl_mixture_coord_exch(
  q = NULL,
  J = NULL,
  S = NULL,
  n_random_starts = 100,
  X = NULL,
  beta,
  transform_beta = T,
  order = 3,
  opt_method = "B",
  max_it = 10,
  tol = 1e-04,
  n_cox_points = NULL,
  plot_designs = F,
  verbose = 1,
  opt_crit = 0,
  seed = NULL,
  n_cores = 1,
  save_all_designs = F,
  n_pv = 0,
  no_choice = F,
  fixed_choice_sets = NULL,
  fixed_alternatives = NULL,
  randomize_final_designs = F
)
}
\arguments{
\item{q}{number of mixture ingredient proportions.}

\item{J}{number of alternatives within a choice set.}

\item{S}{number of choice sets.}

\item{n_random_starts}{number or random starts. Defaults to 100.}

\item{X}{If an initial design is to be supplied, then it must be a 3-dimensional array of size \code{(q, J, S)}, with q, J, and S defined above.}

\item{beta}{Prior parameters. For a locally optimal design, it should be a numeric vector of length m = (q^3 + 5*q)/6. For a pseudo-Bayesian design, it must be a matrix with prior simulations of size (nxm) where m is previously defined and m is the number of prior draws, i.e., there is a prior draw per row.}

\item{transform_beta}{boolean parameter. Should the \code{beta} vector/matrix be transformed by subtracting the q-th element?}

\item{order}{integer corresponding to a Scheffé model order (1, 2, 3 if no process variables are used; 2 if process variables are used).}

\item{opt_method}{Optimization method in each step of the coordinate exchange algorithm.
It can be "B" (Brent's algorithm) or "D" (discretization of Cox direction)}

\item{max_it}{integer for maximum number of iterations that the coordinate exchange algorithm will do}

\item{tol}{A positive error tolerance in Brent's method.}

\item{n_cox_points}{number of points to use in the discretization of Cox direction. Ignored if opt_method is Brent.}

\item{plot_designs}{boolean. If TRUE, shows a plot of the initial and the final design. Only works if q is 3 or 4.}

\item{verbose}{level of verbosity. See below for details.}

\item{opt_crit}{optimality criterion: D-optimality ("D" or 0) or I-optimality ("I" or 1).}

\item{seed}{Seed for reproducibility.}

\item{n_cores}{Number of cores for parallel processing.}

\item{save_all_designs}{Whether the function should return a list with all the designs created at random or only the best.}

\item{n_pv}{Number of process variables}

\item{no_choice}{Add no_choice (i.e., opt-out) alternative?}

\item{fixed_choice_sets}{If it is desired, a number of fixed choice sets can be added to the design. These should come in a 3-dimensional array of size \code{(q+n_pv, J, n_fixed_choice_sets)}. The final design (unless randomized) will have these fixed choice sets as the first \code{n_fixed_choice_sets} choice sets. Note that the parameter \code{S} in the function already includes these fixed choice sets. If n_fixed_choice_sets is bigger than S, then an exception will be returned. Also, there is no sanity check for these choice sets, so they should be checked first by the user to make sure that the mixtures sum up to 1 and that the process variables are within the acceptable ranges.}

\item{fixed_alternatives}{If it is desired, a number of fixed alternatives can be added. At the moment it is only possible to add one fixed alternative per choice set. These fixed alternatives should come in a matrix with \code{q+n_pv} columns and \code{n_fixed_alternatives} rows. If there are no fixed choice sets in the design, the final design (unless randomized) will have the choice sets with the fixed alternatives as the first \code{n_fixed_alternatives} choice sets. If there are fixed choice sets in the design, the final design (unless randomized) will have the choice sets with the fixed alternatives as the first \code{n_fixed_alternatives} choice sets, then the \code{n_fixed_alternatives} choice sets. There is no sanity check here either, so the alternatives should be checked first by the user to make sure that the mixtures sum up to 1 and that the process variables are within the acceptable ranges.}

\item{randomize_final_designs}{Should the final designs should be randomized? This orders the choice sets randomly as well as the alternatives.}
}
\value{
The function returns a list with 11 elements: \enumerate{
\item \code{X_orig}: The original design. A 3-dimensional array of size \code{(q + n_pv, J, S)}.
\item \code{X}: The optimized design. A 3-dimensional array of size \code{(q + n_pv, J, S)}.
\item \code{beta}: The original \code{beta} vector or matrix.
\item \code{opt_crit_value_orig}: efficiency of the original design.
\item \code{opt_crit_value}: efficiency of the optimized design.
\item \code{n_iter}: Number of iterations performed.
\item \code{efficiency_value_per_iteration}: Efficiency value in each iteration of the algorithm.
\item \code{opt_crit}: The optimality criterion used.
\item \code{q}: Number of mixture ingredients.
\item \code{n_pv}: Number of process variables.
\item \code{seed}: seed used to generate the final design. If a design was used as input by the user, this will be NA.
}
}
\description{
Performs the coordinate exchange algorithm for a Multinomial Logit Scheffé model as described in
\emph{Bayesian D-optimal choice designs for mixtures} by Ruseckaite, Goos & Fok (2017).
}
\details{
Verbosity levels: each level prints the previous plus additional things:
\enumerate{
\item Print the efficiency value in each iteration and a final summary
\item Print the values of j, s, i, and efficiency value in each subiteration
\item TO-DO: Write the rest
}
}
